<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picHangman.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfVBRIUCga0dHFL
        AAAJYklEQVR4Xu3XQa5kNxIDwL7/pceehdck8GrRVIYBr5T1nYwShfKfP/4hQIAAAQIECBAgQIAAAQIE
        CBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA
        AQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAg
        QIAAAQIECBBIAv/7d8C/3w2Ss3MCf6WA8n8v//8N/UNgUsAD4AGYvLiW/o2AB8AD8Jub5K9MCngAPACT
        F9fSvxHwAHgAfnOT/JVJAQ+AB2Dy4lr6NwIeAA/Ab26SvzIp4AHwAExeXEv/RsAD4AH4zU3yVyYFPAAe
        gMmLa+nfCLQPwG/+a3/fX2nzp7m/L5mNCBQC6WL/d178qcmRNn+amwxvaQLpYnsAuv9FcJMITAp4ALqC
        J6fJL9/SBNLF9gugeyDcJAKTAh6AruDJafLLtzSBdLH9AugeCDeJwKSAB6AreHKa/PItTSBdbL8AugfC
        TSIwKeAB6AqenCa/fEsTSBfbL4DugXCTCEwKeAC6gienyS/f0gTSxfYLoHsg3CQCkwIegK7gyWnyy7c0
        gXSx/QLoHgg3icCkgAegK3hymvzyLU0gXWy/ALoHwk0iMCngAegKnpwmv3xLE0gX2y+A7oFwkwhMCngA
        uoInp8kv39IErgukYrfn1x3lJzAp0BY8zU2GtzSB6wKp2O35dUf5CUwKtAVPc5PhLU3gukAqdnt+3VF+
        ApMCbcHT3GR4SxO4LpCK3Z5fd5SfwKRAW/A0Nxne0gSuC6Rit+fXHeUnMCnQFjzNTYa3NIHrAqnY7fl1
        R/kJTAq0BU9zk+EtTeC6QCp2e37dUX4CkwJtwdPcZHhLE7gukIrdnl93lJ/ApEBb8DQ3Gd7SBK4LpGK3
        59cd5ScwKdAWPM1Nhrc0gesCqdjt+XVH+QlMCrQFT3OT4S1N4LpAKnZ7ft1RfgKTAm3B09xkeEsTuC6Q
        it2eX3eUn8CkQFvwNDcZ3tIErgukYrfn1x3lJzAp0BY8zU2GtzSB6wKp2O35dUf5CUwKtAVPc5PhLU3g
        ukAqdnt+3VF+ApMCbcHT3GR4SxO4LpCK3Z5fd5SfwKRAW/A0Nxne0gSuC6Rit+fXHeUnMCnQFjzNTYa3
        NIHrAqnY7fl1R/kJTAq0BU9zk+EtTeC6QCp2e37dUX4CkwJtwdPcZHhLE7gukIrdnl93lJ/ApEBb8DQ3
        Gd7SBK4LpGK359cd5ScwKdAWPM1Nhrc0gesCqdjt+XVH+QlMCrQFT3OT4S1N4LpAKnZ7ft1RfgKTAm3B
        09xkeEsTuC6Qit2eX3eUn8CkQFvwNDcZ3tIErgukYrfn1x3lJzAp0BY8zU2GtzSB6wKp2O35dUf5CUwK
        tAVPc5PhLU3gukAqdnt+3VF+ApMCbcHT3GR4SxO4LpCK3Z5fd5SfwKRAW/A0Nxne0gSuC6Rit+fXHeUn
        MCnQFjzNTYa3NIHrAqnY7fl1R/kJTAq0BU9zk+EtTeC6QCp2e37dUX4CkwJtwdPcZHhLE7gukIrdnl93
        lJ/ApEBb8DQ3Gd7SBK4LpGK359cd5ScwKdAWPM1Nhrc0gesCqdjt+XVH+QlMCrQFT3OT4S1N4LpAKnZ7
        ft1RfgKTAm3B09xkeEsTuC6Qit2eX3eUn8CkQFvwNDcZ3tIErgukYrfn1x3lJzAp0BY8zU2GtzSB6wKp
        2O35dUf5CUwKtAVPc5PhLU3gukAqdnt+3VF+ApMCbcHT3GR4SxO4LpCK3Z5fd5SfwKRAW/A0Nxne0gSu
        C6Rit+fXHeUnMCnQFjzNTYa3NIHrAqnY7fl1R/kJTAq0BU9zk+EtTeC6QCp2e37dUX4CkwJtwdPcZHhL
        E7gukIrdnl93lJ/ApEBb8DQ3Gd7SBK4LpGK359cd5ScwKdAWPM1Nhrc0gesCqdjt+XVH+QlMCrQFT3OT
        4S1N4LpAKnZ7ft1RfgKTAm3B09xkeEsTuC6Qit2eX3eUn8CkQFvwNDcZ3tIErgukYrfn1x3lJzAp0BY8
        zU2GtzSB6wKp2O35dUf5CUwKtAVPc5PhLU3gukAqdnt+3VF+ApMCbcHT3GR4SxO4LpCK3Z5fd5SfwKRA
        W/A0Nxne0gSuC6Rit+fXHeUnMCnQFjzNTYa3NIHrAqnY7fl1R/kJTAq0BU9zk+EtTeC6QCp2e37dUX4C
        kwJtwdPcZHhLE7gukIrdnl93lJ/ApEBb8DQ3Gd7SBK4LpGK359cd5ScwKdAWPM1Nhrc0gesCqdjt+XVH
        +QlMCrQFT3OT4S1N4LpAKnZ7ft1RfgKTAm3B09xkeEsTuC6Qit2eX3eUn8CkQFvwNDcZ3tIErgukYrfn
        1x3lJzAp0BY8zU2GtzSB6wKp2O35dUf5CUwKtAVPc5PhLU3gukAqdnt+3VF+ApMCbcHT3GR4SxO4LpCK
        3Z5fd5SfwKRAW/A0Nxne0gSuC6Rit+fXHeUnMCnQFjzNTYa3NIHrAqnY7fl1R/kJTAq0BU9zk+EtTeC6
        QCp2e37dUX4CkwJtwdPcZHhLE7gukIrdnl93lJ/ApEBb8DQ3Gd7SBK4LpGK359cd5ScwKdAWPM1Nhrc0
        gesCqdjt+XVH+QlMCrQFT3OT4S1N4LpAKnZ7ft1RfgKTAm3B09xkeEsTuC6Qit2eX3eUn8CkQFvwNDcZ
        3tIErgukYrfn1x3lJzAp0BY8zU2Gt/QbAulyOv/z51WDN26wFJ8EXr3ccuWH69PF8eE3BBQlF+VVozdu
        sBSfBF693HLlh+3TxfHhNwQUJRflVaM3brAUnwRevdxy5Yft08Xx4TcEFCUX5VWjN26wFJ8EXr3ccuWH
        7dPF8eE3BBQlF+VVozdusBSfBF693HLlh+3TxfHhNwQUJRflVaM3brAUnwRevdxy5Yft08Xx4TcEFCUX
        5VWjN26wFJ8EXr3ccuWH7dPF8eE3BBQlF+VVozdusBSfBF693HLlh+3TxfFhAgQIECBAgAABAgQIECBA
        gAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI
        ECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB
        AgRqgX8ASK7TcEgwQkIAAAAASUVORK5CYII=
</value>
  </data>
</root>